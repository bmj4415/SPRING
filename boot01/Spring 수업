3일차>>



@Controller 하위의 어노테이션은 크게 2가지로 나뉘어지고 자세한 사항은 05ppt 18p 참조
@ResponseBody : ajax 전용 어노테이션

default값은 get 방식(특히나 브라우저에서 경로로 찾아가는 경우는 더더욱)

* Content-Type : Request 객체에 담긴 데이터의 포맷(형식) *

1) Application/x-www-form-urlencode
 =>	key=value&key=value&... /QueryString(질의문자열) 형식, 일반적으로 가장 많이 쓰임.
	예) form을 기준으로 예시 : name=value&name=value&... 

2) Application/json 
 => { "key" : "value", "key" : "value", ...} /JSON 형식

3) multipart/form-data
 => 파일이 가진 모든 정보를 보내야하기 때문에 임의의 인코딩을 거치지 않고 바이너리 스트링 방식을 취함.
 
여러개의 값을 하나의 객체로 받을 때 => 커맨드 객체
하나의 값을 받을 때 => @RequestParam

* @DateTimeFormat(pattern = "yyyy-MM-dd") : 대소문자 구분함(대문자 MM은 월을 의미하고, 소문자 mm은 분(minute)을 의미)

ViewResolver : 실제로 존재하는 위치를 반환해주는 Bean(공통경로는 ViewResolver가 채워주고 나머지 파일정보만 개발자가 적어주면 됨)
*Thymeleaf ViewResolver
prefix : classpath:/templates/
suffix : .html

예) emp/list
=> classpath:/templates/emp/list.html => 

순환참조 오류 : 본인 스스로를 필드주입할 때 생기는 오류

※ 302번



4일차>>


server.servlet.context-path=/yedam : 추후 프로젝트가 마무리되면 경로에 /yedam이 추가되면서 링크 표현식으로 쓰지 않게 되면 경로를 못 찾아서 에러가 발생함.
									 직접 경로를 입력하는 경우 모두 찾아서 변경해야함. 따라서 링크표현식으로 사용하면 아주 편리함.
									 
<html xmlns:th="https://www.thymeleaf.org/"></html>
: 타임리프를 쓰기 위해 꼭 써줘야함							
==> 템플릿으로 등록하고 간편하게 불러서 쓰기

<th:block th:each=""> ==> 타임리프 반복문을 쓸때는 무조건 each는 block과 함께 쓴다!

http://localhost:8099/yedam/empInfo?employeeId=100
(EmpController 파일참조, EmpVO empVO에 어노테이션이 없고 객체타입이므로 커맨드 타입)
커맨드 객체 => queryString
		  => key=value&key=value
		  => 따라서 employeeId=100
		  
((list 파일))

getContextPath : 		  

location.href='/yedam/empInfo?employeeId=100
: 현재 동적입력값이 너무 많음(/yedam, employeeId=100)

location.href='@{/empInfo(employeeId=${info.employeeId})}'

변형>> |location.href='@{/empInfo(employeeId=${info.employeeId})}'|
==> 괄호를 이용해서 뒤쪽의 동적입력값을 처리할 공간을 따로 마련해줌(key=value 형식)
| | : 내부를 분석해서 코드를 실행하고 보이는 그대로 출력해달라는 뜻에서 달아줌.

※key=value&key=value ==> 링크표현식에서는 최대한 특수문자를 줄이고자 & 대신 , 를 씀. key=value, key=value 

location.href='/yedam/empList'

button))
|location.href='@{/empList}'|


* 타임리프 => 자바기반 언어(라이브러리)


변수표현식 => 객체를 매핑(th:object="${}"시켜 th:field=*{}를 필요한 곳에 삽입. *{}의 *는 객체필드를 말함. id, name, value를 타임리프가 지원

FormData : 멀티미디어를 ajax 방법으로 보내는 메소드

{
 employeeId : 100,
 lastName : 'Hong',
 email : ~
 
}






		 